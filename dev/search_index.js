var documenterSearchIndex = {"docs":
[{"location":"#PosixChannels.jl","page":"PosixChannels.jl","title":"PosixChannels.jl","text":"","category":"section"},{"location":"","page":"PosixChannels.jl","title":"PosixChannels.jl","text":"Documentation for PosixChannels.jl","category":"page"},{"location":"","page":"PosixChannels.jl","title":"PosixChannels.jl","text":"PosixChannels","category":"page"},{"location":"#PosixChannels","page":"PosixChannels.jl","title":"PosixChannels","text":"PosixChannels provides an AbstractChannel-compatible channel using POSIX message queues.\n\nThe high level API is available through PosixChannel.\n\nFor more informations on POSIX message queues, see man 7 mq_overview.\n\n\n\n\n\n","category":"module"},{"location":"#Table-of-contents","page":"PosixChannels.jl","title":"Table of contents","text":"","category":"section"},{"location":"","page":"PosixChannels.jl","title":"PosixChannels.jl","text":"Pages = [\"index.md\"]\nDepth = 5","category":"page"},{"location":"#Public-API","page":"PosixChannels.jl","title":"Public API","text":"","category":"section"},{"location":"#PosixChannel","page":"PosixChannels.jl","title":"PosixChannel","text":"","category":"section"},{"location":"","page":"PosixChannels.jl","title":"PosixChannels.jl","text":"PosixChannel\nPosixChannel(::String; kwargs...)","category":"page"},{"location":"#PosixChannels.PosixChannel","page":"PosixChannels.jl","title":"PosixChannels.PosixChannel","text":"An impementation of AbstractChannel that uses POSIX message queues.\n\n\n\n\n\n","category":"type"},{"location":"#PosixChannels.PosixChannel-Tuple{String}","page":"PosixChannels.jl","title":"PosixChannels.PosixChannel","text":"PosixChannel{T}(name, kwargs...)\n\nCreate a PosixChannel that works with messages of type T.\n\nNotes: T must be a plain data type (isbitstype must return true), and the message queue must allow for messages of at least sizeof(T).\n\nExtended help\n\nArguments\n\nSee man 3 mq_open for details.\n\nAll usages\n\nmode::Symbol=:rw: the opening mode of the POSIX queue, can be :r, :w, or :rw.\ncloexec::Bool=false: Activate the O_CLOEXEC flag.\ncreate::Bool=true: Activate the O_CREAT flag.\nexcl::Bool=false: Activate the O_CREAT flag.\nnonblock::Bool=false: Activate the O_NONBLOCK flag.\n\nCreation specifics\n\nWhen creating a new queue (flag O_CREAT activated), it is necessary to provide additional informations. \n\ncreate_r_user::Bool=true: Make queue readable for user.\ncreate_w_user::Bool=true: Make queue writable for user.\ncreate_r_group::Bool=true: Make queue readable for the group of the user.\ncreate_w_group::Bool=true: Make queue writable for the group of the user.\ncreate_r_other::Bool=false: Make queue readable for other users.\ncreate_w_other::Bool=false: Make queue writable for other users.\ncreate_len::Int=systemmsgdefault(): Maximum number of messages in the queue.\ncreate_msg_size::Int=sizeof(T): Maximum size of a message.\n\nExamples\n\nStart two julia REPL (a sender and a receiver).\n\nsender.jl:\n\nusing PosixChannels\n\nchan = PosixChannel{Int}(\"posix_channels_are_fun\", mode=:w)\nprint(\"Press [Enter] when you are ready to send data.\")\nreadline()\n\nfor i in 1:10\n    put!(chan, i)\nend\n\nprintln(\"Done!\")\nprintln(\"Closing the channel.\")\nclose(chan)\n\n\nreceiver.jl\n\nusing PosixChannels\n\nchan = PosixChannel{Int}(\"posix_channels_are_fun\", mode=:r)\nprintln(\"Listening for 10 incoming Int, you may start sending\")\n\nfor _ in 1:10\n    while !isready(chan)\n        wait(chan)\n    end\n    msg = take!(chan)\n    println(\"Received $msg\")\nend\n\nprintln(\"Done!\")\nprintln(\"Closing the channel.\")\nclose(chan)\nprintln(\"Deleting the channel.\")\nunlink(chan)\n\nYou can then launch each script, and press return in the sender's window.\n\n$ julia --project sender.jl\nPress [Enter] when you are ready to send data.\nDone!\nClosing the channel.\n\n$ julia --project receiver.jl\nListening for 10 incoming Int, you may start sending\nReceived 1\nReceived 2\nReceived 3\nReceived 4\nReceived 5\nReceived 6\nReceived 7\nReceived 8\nReceived 9\nReceived 10\nDone!\nClosing the channel.\nDeleting the channel.\n\nnote: Types of messages\nThis example uses integers, but any type that verifies isbitstype could be used. See StaticStrings for example.\n\nSee also wait, put!, take!, unlink, isnonblocking.\n\n\n\n\n\n","category":"method"},{"location":"","page":"PosixChannels.jl","title":"PosixChannels.jl","text":"unlink\nisnonblocking\nlength(::PosixChannel)\nclose(::PosixChannel)","category":"page"},{"location":"#PosixChannels.unlink","page":"PosixChannels.jl","title":"PosixChannels.unlink","text":"unlink(chan)\n\nPOSIX messages queues are persistent. This allows destroying a queue.\n\n\n\n\n\n","category":"function"},{"location":"#PosixChannels.isnonblocking","page":"PosixChannels.jl","title":"PosixChannels.isnonblocking","text":"isnonblocking(chan)\n\nChecks the O_NONBLOCK flag of a PosixChannel.\n\nSee also mq_attr.\n\n\n\n\n\n","category":"function"},{"location":"#Base.length-Tuple{PosixChannel}","page":"PosixChannels.jl","title":"Base.length","text":"\n\n\n\n","category":"method"},{"location":"#Base.close-Tuple{PosixChannel}","page":"PosixChannels.jl","title":"Base.close","text":"\n\n\n\n","category":"method"},{"location":"#AbstractChannel-interface","page":"PosixChannels.jl","title":"AbstractChannel interface","text":"","category":"section"},{"location":"","page":"PosixChannels.jl","title":"PosixChannels.jl","text":"put!(::PosixChannel, v, prio=0)\ntake!(::PosixChannel, prio)\nisready(::PosixChannel)\nfetch(::PosixChannel)\nwait(::PosixChannel)","category":"page"},{"location":"#Base.put!","page":"PosixChannels.jl","title":"Base.put!","text":"put!(chan::PosixChannel, v[, prio=0])\n\nAdd a message to a PosixChannel, with priority prio.\n\nSee man 3 mq_send for details.\n\nSee also send_posix_mqueue.\n\n\n\n\n\n","category":"function"},{"location":"#Base.take!-Tuple{PosixChannel, Any}","page":"PosixChannels.jl","title":"Base.take!","text":"take!(chan::PosixChannel [, prio])\n\nTake a message from a PosixChannel. If a priority is set, the oldest message with priority prio is taken.\n\nSee man 3 mq_receive for details.\n\nSee also receive_posix_mqueue.\n\n\n\n\n\n","category":"method"},{"location":"#Base.isready-Tuple{PosixChannel}","page":"PosixChannels.jl","title":"Base.isready","text":"\n\n\n\n","category":"method"},{"location":"#Base.fetch-Tuple{PosixChannel}","page":"PosixChannels.jl","title":"Base.fetch","text":"You cannot fetch from a PosixChannel.\n\n\n\n\n\n","category":"method"},{"location":"#Base.wait-Tuple{PosixChannel}","page":"PosixChannels.jl","title":"Base.wait","text":"\n\n\n\n","category":"method"},{"location":"#/proc-utilities","page":"PosixChannels.jl","title":"/proc utilities","text":"","category":"section"},{"location":"","page":"PosixChannels.jl","title":"PosixChannels.jl","text":"The system-wide defaults for POSIX message queues can be set through a /proc interface. See man 7 mq_overview for details.","category":"page"},{"location":"","page":"PosixChannels.jl","title":"PosixChannels.jl","text":"PosixChannels.systemmsgdefault\nPosixChannels.systemmsgdefault!\nPosixChannels.systemmsgmax\nPosixChannels.systemmsgmax!\nPosixChannels.systemmsgsizedefault\nPosixChannels.systemmsgsizedefault!\nPosixChannels.systemmsgsizemax\nPosixChannels.systemmsgsizemax!\nPosixChannels.systemqueuesmax\nPosixChannels.systemqueuesmax!","category":"page"},{"location":"#PosixChannels.systemmsgdefault","page":"PosixChannels.jl","title":"PosixChannels.systemmsgdefault","text":"systemmsgdefault()\n\nReturn the system's default number of messages in a message queue.\n\nSee also systemmsgdefault!.\n\n\n\n\n\n","category":"function"},{"location":"#PosixChannels.systemmsgdefault!","page":"PosixChannels.jl","title":"PosixChannels.systemmsgdefault!","text":"systemmsgdefault!(val)\n\nSet the system's default number of messages in a message queue.\n\nwarning: Warning\nRoot privileges are likely needed.\n\nSee also systemmsgdefault.\n\n\n\n\n\n","category":"function"},{"location":"#PosixChannels.systemmsgmax","page":"PosixChannels.jl","title":"PosixChannels.systemmsgmax","text":"systemmsgmax()\n\nReturn the system's max number of messages in a message queue.\n\nSee also systemmsgmax!.\n\n\n\n\n\n","category":"function"},{"location":"#PosixChannels.systemmsgmax!","page":"PosixChannels.jl","title":"PosixChannels.systemmsgmax!","text":"systemmsgmax!(val)\n\nSet the system's max number of messages in a message queue.\n\nwarning: Warning\nRoot privileges are likely needed.\n\nSee also systemmsgmax.\n\n\n\n\n\n","category":"function"},{"location":"#PosixChannels.systemmsgsizedefault","page":"PosixChannels.jl","title":"PosixChannels.systemmsgsizedefault","text":"systemmsgsizedefault()\n\nReturn the system's default size of messages in a message queue.\n\nSee also systemmsgdefault!.\n\n\n\n\n\n","category":"function"},{"location":"#PosixChannels.systemmsgsizedefault!","page":"PosixChannels.jl","title":"PosixChannels.systemmsgsizedefault!","text":"systemmsgsizedefault!(val)\n\nSet the system's default size of messages in a message queue.\n\nwarning: Warning\nRoot privileges are likely needed.\n\nSee also systemmsgsizedefault.\n\n\n\n\n\n","category":"function"},{"location":"#PosixChannels.systemmsgsizemax","page":"PosixChannels.jl","title":"PosixChannels.systemmsgsizemax","text":"systemmsgsizemax()\n\nReturn the system's max size of messages in a message queue.\n\nSee also systemmsgsizemax!.\n\n\n\n\n\n","category":"function"},{"location":"#PosixChannels.systemmsgsizemax!","page":"PosixChannels.jl","title":"PosixChannels.systemmsgsizemax!","text":"systemmsgsizemax!(val)\n\nSet the system's max size of messages in a message queue.\n\nwarning: Warning\nRoot privileges are likely needed.\n\nSee also systemmsgsizemax.\n\n\n\n\n\n","category":"function"},{"location":"#PosixChannels.systemqueuesmax","page":"PosixChannels.jl","title":"PosixChannels.systemqueuesmax","text":"systemqueuesmax()\n\nReturn the system's max number of message queue.\n\nSee also systemqueuesmax!.\n\n\n\n\n\n","category":"function"},{"location":"#PosixChannels.systemqueuesmax!","page":"PosixChannels.jl","title":"PosixChannels.systemqueuesmax!","text":"systemqueuesmax!(val)\n\nSet the system's max number of message queue.\n\nwarning: Warning\nRoot privileges are likely needed.\n\nSee also systemqueuesmax.\n\n\n\n\n\n","category":"function"},{"location":"#Internal-API","page":"PosixChannels.jl","title":"Internal API","text":"","category":"section"},{"location":"","page":"PosixChannels.jl","title":"PosixChannels.jl","text":"PosixChannels.correct_name\nPosixChannels.mq_attr\nPosixChannels.open_posix_mqueue\nPosixChannels.close_posix_mqueue\nPosixChannels.unlink_posix_mqueue\nPosixChannels.send_posix_mqueue\nPosixChannels.receive_posix_mqueue\nPosixChannels.getattr_posix_mqueue\nPosixChannels.sigevent\nPosixChannels.notify_channel\nPosixChannels.register_notifier_cfunction","category":"page"},{"location":"#PosixChannels.correct_name","page":"PosixChannels.jl","title":"PosixChannels.correct_name","text":"correct_name(name)\n\nPrepend the string name with a \"/\" if it does not start with \"/\".\n\n\n\n\n\n","category":"function"},{"location":"#PosixChannels.mq_attr","page":"PosixChannels.jl","title":"PosixChannels.mq_attr","text":"Mirror of the mq_attr structure used in C to configure a message queue.\n\nSee also open_posix_mqueue, getattr_posix_mqueue.\n\n\n\n\n\n","category":"type"},{"location":"#PosixChannels.open_posix_mqueue","page":"PosixChannels.jl","title":"PosixChannels.open_posix_mqueue","text":"open_posix_mqueue(name, flags[, perm, attr])\n\nCall the C function mq_open with the given name and flags. Checks for errors using Base.systemerror. name is corrected using correct_name.\n\nWhen O_CREAT flag is on, perm and attr are required.\n\nSee man 3 mq_open for details.\n\nSee also close_posix_mqueue.\n\n\n\n\n\nopen_posix_mqueue(name; kwargs...)\n\nCall mq_open by explicitely constructing the various flags beforehand.\n\nArguments\n\nSee man 3 mq_open for details.\n\nAll usages\n\nmode::Symbol=:rw: the opening mode of the POSIX queue, can be :r, :w, or :rw.\ncloexec::Bool=false: Activate the O_CLOEXEC flag.\ncreate::Bool=true: Activate the O_CREAT flag.\nexcl::Bool=false: Activate the O_CREAT flag.\nnonblock::Bool=false: Activate the O_NONBLOCK flag.\n\nCreation specifics\n\nWhen creating a new queue (flag O_CREAT activated), it is necessary to provide additional informations. \n\ncreate_r_user::Bool=true: Make queue readable for user.\ncreate_w_user::Bool=true: Make queue writable for user.\ncreate_r_group::Bool=true: Make queue readable for the group of the user.\ncreate_w_group::Bool=true: Make queue writable for the group of the user.\ncreate_r_other::Bool=false: Make queue readable for other users.\ncreate_w_other::Bool=false: Make queue writable for other users.\ncreate_len::Int=systemmsgdefault(): Maximum number of messages in the queue.\ncreate_msg_size::Int=systemmsgsizedefault(): Maximum size of a message.\n\n\n\n\n\n","category":"function"},{"location":"#PosixChannels.close_posix_mqueue","page":"PosixChannels.jl","title":"PosixChannels.close_posix_mqueue","text":"close_posix_mqueue(key)\n\nCall the C function mq_close with the given key. Checks for errors using Base.systemerror.\n\nSee man 3 mq_close for details.\n\nSee also open_posix_mqueue, unlink_posix_mqueue.\n\n\n\n\n\n","category":"function"},{"location":"#PosixChannels.unlink_posix_mqueue","page":"PosixChannels.jl","title":"PosixChannels.unlink_posix_mqueue","text":"unlink_posix_mqueue(name)\n\nCall the C function mq_close with the given name. Checks for errors using Base.systemerror.\n\nSee man 3 mq_unlink for details.\n\nSee also open_posix_mqueue, close_posix_mqueue.\n\n\n\n\n\n","category":"function"},{"location":"#PosixChannels.send_posix_mqueue","page":"PosixChannels.jl","title":"PosixChannels.send_posix_mqueue","text":"send_posix_mqueue(key, val, prio=0)\n\nCall the C function `mq_send` with the given key, value, and priority. Checks for errors using [`Base.systemerror`](https://docs.julialang.org/en/v1/base/c/#Base.systemerror).\n\nSee man 3 mq_send for details.\n\nSee also open_posix_mqueue, close_posix_mqueue, receive_posix_mqueue.\n\n\n\n\n\n","category":"function"},{"location":"#PosixChannels.receive_posix_mqueue","page":"PosixChannels.jl","title":"PosixChannels.receive_posix_mqueue","text":"receive_posix_mqueue(key, type[, prio])\n\nCall the C function mq_receive with the given key, and priority. Checks for errors using Base.systemerror. An element of type type is retreived. If the priority is given, only messages with priority prio are fetched. Else, the oldest message is fetched.\n\nSee man 3 mq_receive for details.\n\nSee also open_posix_mqueue, close_posix_mqueue, send_posix_mqueue.\n\n\n\n\n\n","category":"function"},{"location":"#PosixChannels.getattr_posix_mqueue","page":"PosixChannels.jl","title":"PosixChannels.getattr_posix_mqueue","text":"getattr_posix_mqueue(key)\n\nCall the C function mq_getattr with the given key. Checks for errors using Base.systemerror.\n\nSee man 3 mq_getattr for details.\n\nSee also mq_attr.\n\n\n\n\n\n","category":"function"},{"location":"#PosixChannels.sigevent","page":"PosixChannels.jl","title":"PosixChannels.sigevent","text":"Mirror of the sigevent structure used in C to configure signal events. See /usr/include/bits/types/sigevent_t.h.\n\nSee also notify_channel, register_notifier_cfunction.\n\n\n\n\n\n","category":"type"},{"location":"#PosixChannels.notify_channel","page":"PosixChannels.jl","title":"PosixChannels.notify_channel","text":"notify_channel(handle)\n\nCallback for the C function mq_notify. It only @ccall uv_async_send with the handle of the AsyncCondition from the channel.\n\nSee the manual for an explanation.\n\nSee also register_notifier_cfunction.\n\n\n\n\n\n","category":"function"},{"location":"#PosixChannels.register_notifier_cfunction","page":"PosixChannels.jl","title":"PosixChannels.register_notifier_cfunction","text":"register_notifier_cfunction(chan)\n\nCall the C function mq_notify for the message queue. Checks for errors using Base.systemerror. \n\nmq_notify is called with the SIGEV_THREAD flag and configured to call notify_channel with the channel's condition handle as a parameter. This is done so the OS will start a thread that will unlock the condition when a new message is posted to the empty queue. This function is used by wait before it starts waiting for the channel's condition.\n\nSee man 3 mq_notify for details.\n\nSee also notify_channel\n\n\n\n\n\n","category":"function"}]
}
